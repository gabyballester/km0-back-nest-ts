{
  "name": "km0-market",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build --builder swc",
    "build:prod": "nest build --builder swc --webpack",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\" --cache",
    "format:check": "prettier --check \"src/**/*.ts\" \"test/**/*.ts\" --cache",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix --cache --max-warnings=50",
    "prepare": "husky",
    "check:process-env": "node scripts/check-process-env.js",
    "check:deployment": "node scripts/check-deployment.js",
    "setup:env": "node scripts/setup-env.js",
    "clean:env": "node scripts/clean-env-files.js",
    "env:setup": "cp env.mirror .env",
    "env:example": "cp env.example .env",
    "env:info": "node -e \"console.log('Current NODE_ENV:', process.env.NODE_ENV || 'development')\"",
    "env:dev": "cross-env NODE_ENV=development npm run env:info",
    "env:test": "cross-env NODE_ENV=test npm run env:info",
    "env:prod": "cross-env NODE_ENV=production npm run env:info",
    "test:environments": "node scripts/test-environments.js",
    "dev": "node scripts/timed-run.js \"cross-env NODE_ENV=development nest start --watch --builder swc --preserveWatchOutput\" \"🚀 Desarrollo con hot reload (Development)\"",
    "dev:debug": "node scripts/timed-run.js \"cross-env NODE_ENV=development nest start --debug --watch --builder swc\" \"🐛 Inicio con debug mode (Development)\"",
    "test:quick": "node scripts/timed-run.js \"cross-env NODE_ENV=test jest --maxWorkers=4 --bail --passWithNoTests --silent --no-coverage\" \"🧪 Tests rápidos (Test)\"",
    "test:full": "node scripts/timed-run.js \"cross-env NODE_ENV=test jest --coverage --maxWorkers=2 --bail --passWithNoTests --silent\" \"📊 Tests completos con coverage (Test)\"",
    "test:watch": "cross-env NODE_ENV=test jest --watch --maxWorkers=2 --silent",
    "test:debug": "node scripts/timed-run.js \"node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand\" \"🐛 Tests con debug mode\"",
    "test:e2e:quick": "node scripts/timed-run.js \"cross-env NODE_ENV=test jest --config ./test/jest-e2e.json --maxWorkers=1 --bail --silent --testTimeout=3000\" \"🚀 E2E tests rápidos (Test)\"",
    "test:e2e:full": "node scripts/timed-run.js \"cross-env NODE_ENV=test jest --config ./test/jest-e2e.json --maxWorkers=1 --bail --silent\" \"📊 E2E tests completos (Test)\"",
    "type-check": "tsc --noEmit",
    "type-check:staged": "node scripts/type-check-staged.js",
    "test:quick:staged": "node scripts/test-quick-staged.js",
    "validate:quick": "npm run format && npm run type-check && npm run lint",
    "validate:staged": "node scripts/validate-staged.js",
    "validate:full": "npm run format && npm run type-check && npm run lint && npm run test:full && npm run test:e2e:full",
    "validate:coverage": "cross-env NODE_ENV=test jest --coverage --maxWorkers=2 --bail --passWithNoTests --silent --coverageThreshold={\"global\":{\"statements\":90,\"branches\":80,\"functions\":90,\"lines\":90}}",
    "pre-commit": "npm run validate:staged",
    "pre-push": "npm run validate:full",
    "start:quick": "node scripts/timed-run.js \"cross-env NODE_ENV=development nest start --builder swc\" \"🚀 Inicio rápido (Development)\"",
    "start:full": "node scripts/timed-run.js \"cross-env NODE_ENV=development nest start --watch --builder swc --preserveWatchOutput\" \"🔄 Inicio completo con watch (Development)\"",
    "start:prod": "cross-env NODE_ENV=production node dist/main",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:studio": "prisma studio",
    "db:dev": "cross-env NODE_ENV=development prisma db push",
    "db:test": "cross-env NODE_ENV=test prisma db push",
    "db:prod": "cross-env NODE_ENV=production prisma db push",
    "db:studio:dev": "cross-env NODE_ENV=development prisma studio",
    "db:studio:test": "cross-env NODE_ENV=test prisma studio",
    "db:studio:prod": "cross-env NODE_ENV=production prisma studio",
    "deploy:railway": "npm run test:full && npm run build:prod",
    "deploy:render": "npm run test:full && npm run build:prod",
    "deploy:vercel": "npm run test:full && npm run build"
  },
  "lint-staged": {
    "*.ts": [
      "npm run format",
      "npm run type-check:staged",
      "npm run lint",
      "npm run test:quick:staged",
      "npm run check:process-env"
    ],
    "*.{json,md,yml,yaml}": [
      "npm run format"
    ]
  },
  "dependencies": {
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/throttler": "^6.4.0",
    "@prisma/client": "^6.12.0",
    "helmet": "^8.1.0",
    "prisma": "^6.12.0",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "^5.0.1",
    "zod": "^4.0.8"
  },
  "devDependencies": {
    "@commitlint/cli": "^18.4.3",
    "@commitlint/config-conventional": "^18.4.3",
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.7",
    "@nestjs/schematics": "^11.0.5",
    "@nestjs/testing": "^11.1.5",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.3.96",
    "@swc/jest": "^0.2.29",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^9.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "globals": "^16.0.0",
    "husky": "^8.0.3",
    "jest": "^29.5.0",
    "lint-staged": "^16.1.2",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3",
    "typescript-eslint": "^8.20.0"
  }
}
